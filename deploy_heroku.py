#!/usr/bin/env python3
"""
–î–µ–ø–ª–æ–π –Ω–∞ Heroku –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
"""

import os
import subprocess
import json

def create_heroku_files():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª—ã –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Heroku"""
    
    # –°–æ–∑–¥–∞–µ–º Procfile
    procfile_content = "web: gunicorn app:app"
    with open('Procfile', 'w') as f:
        f.write(procfile_content)
    
    # –°–æ–∑–¥–∞–µ–º runtime.txt
    runtime_content = "python-3.9.18"
    with open('runtime.txt', 'w') as f:
        f.write(runtime_content)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º requirements.txt
    requirements = [
        "Flask==2.3.3",
        "Flask-SQLAlchemy==3.0.5",
        "Flask-SocketIO==5.3.6",
        "python-socketio==5.8.0",
        "cryptography==41.0.4",
        "gunicorn==21.2.0"
    ]
    
    with open('requirements.txt', 'w') as f:
        f.write('\n'.join(requirements))
    
    print("‚úÖ –§–∞–π–ª—ã –¥–ª—è Heroku —Å–æ–∑–¥–∞–Ω—ã")

def create_deploy_instructions():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–µ–ø–ª–æ—é"""
    instructions = """
# üöÄ –î–µ–ø–ª–æ–π –Ω–∞ Heroku

## 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Heroku CLI
–°–∫–∞—á–∞–π—Ç–µ —Å: https://devcenter.heroku.com/articles/heroku-cli

## 2. –í–æ–π–¥–∏—Ç–µ –≤ Heroku
```bash
heroku login
```

## 3. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
```bash
heroku create harvest-messenger-app
```

## 4. –î–æ–±–∞–≤—å—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
```bash
heroku addons:create heroku-postgresql:mini
```

## 5. –î–µ–ø–ª–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
```bash
git add .
git commit -m "Initial commit"
git push heroku main
```

## 6. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
```bash
heroku open
```

## –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ Railway:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://railway.app/
2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
3. Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ø–ª–æ–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""
    
    with open('HEROKU_DEPLOY.md', 'w', encoding='utf-8') as f:
        f.write(instructions)
    
    print("‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–µ–ø–ª–æ—é —Å–æ–∑–¥–∞–Ω—ã")

def create_railway_config():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Railway"""
    railway_config = {
        "build": {
            "builder": "nixpacks"
        },
        "deploy": {
            "startCommand": "gunicorn app:app",
            "healthcheckPath": "/",
            "healthcheckTimeout": 300,
            "restartPolicyType": "ON_FAILURE",
            "restartPolicyMaxRetries": 10
        }
    }
    
    with open('railway.json', 'w') as f:
        json.dump(railway_config, f, indent=2)
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Railway —Å–æ–∑–¥–∞–Ω–∞")

if __name__ == '__main__':
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Heroku/Railway")
    print("=" * 50)
    
    create_heroku_files()
    create_railway_config()
    create_deploy_instructions()
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")
    print("üí° –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ —Ñ–∞–π–ª–µ HEROKU_DEPLOY.md")
    print("üåê –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Railway: https://railway.app/") 